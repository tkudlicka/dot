#!/usr/bin/env bash
# shellcheck disable=SC2094,SC2210,SC3028,SC2211,SC2171,SC2288
# Shellchecks disabled for this file
# SC2094: Make sure not to read and write the same file in the same pipeline.
# SC2210: This is a file redirection. Was it supposed to be a comparison or fd operation?
# SC3028: In POSIX sh, VARIABLE is undefined.
# SC2211: This is a glob used as a command name. Was it supposed to be in ${..}, array, or is it missing quoting?
# SC2171: Found trailing ] outside test. Add missing [ or quote if intentional.
# SC2288: This is interpreted as a command name ending with apostrophe. Double check syntax.

############################# Mode definitions ##################################
:: default           : ~/.config/skhd/mode_controller.sh default # default mode: normal
:: window  @         : ~/.config/skhd/mode_controller.sh window # window mode: manipulate windows and spaces
:: resize  @         : ~/.config/skhd/mode_controller.sh resize # resize mode: resize windows in current space
:: reload  @         : ~/.config/skhd/mode_controller.sh reload # reload mode: restart services

# Activate modes using the keybinding
default < alt - w ; window
default < alt - r ; resize
default < alt - x ; reload

# De-activate modes
 window, resize, reload < escape ; default

window  < alt - w ; default
resize    < alt - r ; default
reload  < alt - x ; default

# fast focus desktop
alt - 0x12 : yabai -m space --focus  1
alt - 0x13 : yabai -m space --focus  2
alt - 0x14 : yabai -m space --focus  3
alt - 0x15 : yabai -m space --focus  4
alt - 0x17 : yabai -m space --focus  5
alt - 0x16 : yabai -m space --focus  6
alt - 0x1A : yabai -m space --focus  7
alt - 0x1C : yabai -m space --focus  8
alt - 0x19 : yabai -m space --focus  9
alt - 0x1D : yabai -m space --focus 10
# Launch other modes from within a mode
# display, stack, window, resize, inst, reload
resize, reload   < w ; window
window, reload   < r ; resize

############################# Global modifiers ##################################
# The aim is to not have too many global key-bindings because it will clash with
# other application based keybindings e.g. VS Code, IntelliJ, etc.
alt - space  : yabai -m window --toggle zoom-fullscreen; \
                        sketchybar --trigger window_focus

# vi like key bindings
alt - h        : yabai -m window --focus west
alt - j       : yabai -m window --focus south
alt - k        : yabai -m window --focus north
alt - l        : yabai -m window --focus east

# toggle window native fullscreen
alt - f      : yabai -m window --toggle native-fullscreen

# Open Terminal
alt - 0x24  : open -na /Applications/Alacritty.app

# Toggle zen mode. zooms focused window, removes all margins
# and hides status bar
alt - z      : ~/.config/skhd/toggle_zen_mode.sh; \
                        skhd -k 'escape'


####################### Resize mode ############################################

# Resize focused window towards left direction
resize < h             : yabai -m window --resize left:-100:0 || \
                         yabai -m window --resize right:-100:0

# Resize focused window towards down direction
resize < j             : yabai -m window --resize bottom:0:100 || \
                         yabai -m window --resize top:0:100

# Resize focused window towards up direction
resize < k             : yabai -m window --resize top:0:-100 || \
                         yabai -m window --resize bottom:0:-100

# Resize focused window towards right direction
resize < l             : yabai -m window --resize right:100:0 || \
                         yabai -m window --resize left:100:0

resize < left          : skhd -k "h"

# Resize focused window towards down direction
resize < down          : skhd -k "j"

# Resize focused window towards up direction
resize < up            : skhd -k "k"

# Resize focused window towards right direction
resize < right         : skhd -k "l"

# Balance all windows. Maps to `=` key
resize < 0x18          : yabai -m space --balance; skhd -k 'escape'

# Rotate tree by 90 degrees
resize < r             : yabai -m space --rotate 90

# Mirror tree y-axis
resize < y             : yabai -m space --mirror y-axis; \
                         skhd -k 'escape'

# Mirror tree x-axis
resize < x             : yabai -m space --mirror x-axis; \
                         skhd -k 'escape'

# Set all windows on active space back to normal
resize < z             : yabai -m query --windows --space | \
                         jq -re '.[] | select(."has-fullscreen-zoom" == true) | .id' | \
                         xargs -I{} yabai -m window {} --toggle zoom-fullscreen; \
                         skhd -k 'escape'; \
                         sketchybar --trigger window_focus

# Swaps the recent window with the window that's currently focused by the mouse
resize < s              : yabai -m window mouse --swap recent; \
                          skhd -k 'escape'; \

##################### Window mode ##############################################

# create desktop, send window to new desktop and follow focus
window < s            : yabai -m space --create; \
                        index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')"; \
                        yabai -m window --space "${index}"; \
                        yabai -m space --focus "${index}"; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'

# destroy current desktop and follow focus to previous desktop
window < x            : index="$(yabai -m query --spaces --space | jq '.index - 1')"; \
                        yabai -m space --destroy; \
                        yabai -m space --focus "${index}"; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'

# toggle window native fullscreen
window < f            : yabai -m window --toggle native-fullscreen; skhd -k 'escape'

# change position of window on the current space
window < h            : yabai -m window --warp west; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < j            : yabai -m window --warp south; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < k            : yabai -m window --warp north; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < l            : yabai -m window --warp east; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'

# send window to specified space
alt - 0x12 : yabai -m space --focus  1
alt - 0x13 : yabai -m space --focus  2
alt - 0x14 : yabai -m space --focus  3
alt - 0x15 : yabai -m space --focus  4
alt - 0x17 : yabai -m space --focus  5
alt - 0x16 : yabai -m space --focus  6
alt - 0x1A : yabai -m space --focus  7
alt - 0x1C : yabai -m space --focus  8
alt - 0x19 : yabai -m space --focus  9
alt - 0x1D : yabai -m space --focus 10
window < 0x12            : yabai -m window --space 1; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x13             : yabai -m window --space 2; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x14            : yabai -m window --space 3; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x15            : yabai -m window --space 4; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x17            : yabai -m window --space 5; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x16            : yabai -m window --space 6; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x1A            : yabai -m window --space 7; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x1C            : yabai -m window --space 8; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
window < 0x19            : yabai -m window --space 9; \
                        sketchybar --trigger windows_on_spaces; \
                        skhd -k 'escape'
# Switch layout of current desktop between bsp and stack
window < space        : yabai -m query --spaces --space | \
                        jq -re ".type" | \
                        xargs -I {} bash -c \
                        "if [ {} = 'stack' ]; \
                        then yabai -m space --layout bsp; \
                        else yabai -m space --layout stack; \
                        fi"; \
                        skhd -k 'escape'
